@model List<HOMEOWNER.Models.EventModel>
@{
    ViewData["Title"] = "Event Calendar";
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #3f37c9;
        --danger-color: #ef233c;
        --success-color: #4cc9f0;
        --light-bg: #f8f9fa;
        --dark-text: #212529;
        --light-text: #6c757d;
        --border-color: #e9ecef;
        --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        color: var(--dark-text);
    }

    .event-calendar-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .page-title {
        font-weight: 600;
        font-size: 1.75rem;
        color: var(--dark-text);
        margin: 0;
    }

    .btn-add-event {
        background-color: var(--primary-color);
        border: none;
        border-radius: 6px;
        padding: 0.6rem 1.2rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

    .btn-add-event:hover {
        background-color: var(--primary-hover);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);
    }

    .event-table-container {
        background: white;
        border-radius: 10px;
        box-shadow: var(--card-shadow);
        overflow: hidden;
    }

    .event-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .event-table thead {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
    }

    .event-table th {
        padding: 1rem;
        font-weight: 500;
        text-align: left;
        vertical-align: middle;
    }

    .event-table td {
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        vertical-align: middle;
    }

    .event-table tr:last-child td {
        border-bottom: none;
    }

    .event-table tbody tr {
        transition: all 0.2s ease;
    }

    .event-table tbody tr:hover {
        background-color: rgba(67, 97, 238, 0.03);
        transform: translateX(4px);
    }

    .table-icon {
        margin-right: 0.5rem;
        font-size: 1rem;
        width: 20px;
        text-align: center;
    }

    .btn-action {
        border: none;
        border-radius: 6px;
        padding: 0.5rem 0.8rem;
        font-size: 0.85rem;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .btn-edit {
        background-color: rgba(67, 97, 238, 0.1);
        color: var(--primary-color);
    }

    .btn-edit:hover {
        background-color: rgba(67, 97, 238, 0.2);
    }

    .btn-delete {
        background-color: rgba(239, 35, 60, 0.1);
        color: var(--danger-color);
    }

    .btn-delete:hover {
        background-color: rgba(239, 35, 60, 0.2);
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    /* Modal Styling */
    .modal-content {
        border: none;
        border-radius: 10px;
    }

    .modal-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        border-bottom: none;
    }

    .modal-title {
        font-weight: 500;
    }

    .btn-close {
        filter: invert(1);
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .event-table-container {
            border-radius: 0;
            box-shadow: none;
        }

        .event-table {
            display: block;
            overflow-x: auto;
        }

        .page-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .event-table th, 
        .event-table td {
            padding: 0.8rem;
            font-size: 0.9rem;
        }

        .action-buttons {
            flex-direction: column;
            gap: 0.3rem;
        }

        .btn-action {
            width: 100%;
            justify-content: center;
        }
    }
</style>

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="event-calendar-container">
    <div class="page-header">
        <h2 class="page-title">
            <i class="fas fa-calendar-alt table-icon"></i>Event Calendar
        </h2>
        <button class="btn btn-add-event" onclick="loadEventModal('/Admin/AddEvent')">
            <i class="fas fa-plus"></i> Add New Event
        </button>
    </div>

    <div class="event-table-container">
        <div id="eventTableContainer">
            <table class="event-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-heading table-icon"></i>Title</th>
                        <th><i class="fas fa-align-left table-icon"></i>Description</th>
                        <th><i class="fas fa-calendar-day table-icon"></i>Date</th>
                        <th><i class="fas fa-tags table-icon"></i>Category</th>
                        <th><i class="fas fa-map-marker-alt table-icon"></i>Location</th>
                        <th><i class="fas fa-cogs table-icon"></i>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var eventItem in Model)
                    {
                        <tr id="event_@eventItem.EventID">
                            <td>@eventItem.Title</td>
                            <td>@eventItem.Description</td>
                            <td>@eventItem.EventDate.ToString("MM/dd/yyyy hh:mm tt")</td>
                            <td>@eventItem.Category</td>
                            <td>@eventItem.Location</td>
                            <td>
                                <div class="action-buttons">
                                    <button class="btn-action btn-delete delete-event" data-event-id="@eventItem.EventID">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </button>
                                    <button class="btn-action btn-edit" onclick="loadEventModal('/Admin/EditEvent/@eventItem.EventID')">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Event Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- AJAX content here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle the event deletion via AJAX
        $(document).on('click', '.delete-event', function (e) {
            var eventId = $(this).data("event-id");
            var $row = $("#event_" + eventId);

            if (confirm("Are you sure you want to delete this event?")) {
                $.ajax({
                    url: '/Admin/DeleteEvent',
                    type: 'POST',
                    data: { id: eventId },
                    success: function (response) {
                        if (response.success) {
                            // Add fade out animation before removing
                            $row.fadeOut(300, function() {
                                $(this).remove();
                            });
                            
                            // Show toast notification instead of alert
                            showToast('Event deleted successfully', 'success');
                        } else {
                            showToast(response.message || 'Error deleting event', 'error');
                        }
                    },
                    error: function () {
                        showToast('An error occurred while deleting the event', 'error');
                    }
                });
            }
        });

        function loadEventModal(url) {
            $.get(url, function (data) {
                $('#modalBody').html(data);
                $('#eventModal').modal('show');
            }).fail(function() {
                showToast('Failed to load event form', 'error');
            });
        }

        $(document).on('submit', '#eventForm', function (e) {
            e.preventDefault();
            var form = $(this);

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        $('#eventModal').modal('hide');
                        // Add nice loading animation
                        $('#eventTableContainer').fadeOut(200, function() {
                            $(this).load('/Admin/EventCalendar #eventTableContainer > *', function() {
                                $(this).fadeIn(200);
                            });
                        });
                        showToast(response.message || 'Event saved successfully', 'success');
                    } else {
                        $('#modalBody').html(response); // Show validation errors
                    }
                },
                error: function () {
                    showToast('An error occurred. Please try again.', 'error');
                }
            });
        });

        // Toast notification function
        function showToast(message, type) {
            // You can implement a proper toast notification here
            // For now using a simple alert with different colors
            const colors = {
                success: '#4cc9f0',
                error: '#ef233c'
            };
            
            Toastify({
                text: message,
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: colors[type] || '#4361ee',
                stopOnFocus: true
            }).showToast();
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
}
