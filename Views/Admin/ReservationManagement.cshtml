@model Tuple<IEnumerable<HOMEOWNER.Models.Facility>, IEnumerable<HOMEOWNER.Models.Reservation>>

@{
    ViewData["Title"] = "Facilities & Reservations";
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #3f37c9;
        --success-color: #4cc9f0;
        --danger-color: #ef233c;
        --warning-color: #f8961e;
        --info-color: #4895ef;
        --light-bg: #f8f9fa;
        --dark-text: #212529;
        --light-text: #6c757d;
        --border-color: #e9ecef;
        --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        color: var(--dark-text);
    }

    .management-container {
        max-width: 1400px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .section-title {
        font-weight: 600;
        font-size: 1.75rem;
        color: var(--dark-text);
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .section-title i {
            color: var(--primary-color);
        }

    .btn-primary-custom {
        background-color: var(--primary-color);
        border: none;
        border-radius: 6px;
        padding: 0.6rem 1.2rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

        .btn-primary-custom:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);
        }

    .btn-secondary-custom {
        background-color: var(--light-bg);
        color: var(--dark-text);
        border: none;
        border-radius: 6px;
        padding: 0.6rem 1.2rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

        .btn-secondary-custom:hover {
            background-color: #e9ecef;
            transform: translateY(-2px);
        }

    .table-container {
        background: white;
        border-radius: 10px;
        box-shadow: var(--card-shadow);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .data-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

        .data-table thead {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .data-table th {
            padding: 1rem;
            font-weight: 500;
            text-align: left;
            vertical-align: middle;
        }

        .data-table td {
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            vertical-align: middle;
        }

        .data-table tr:last-child td {
            border-bottom: none;
        }

        .data-table tbody tr {
            transition: all 0.2s ease;
        }

            .data-table tbody tr:hover {
                background-color: rgba(67, 97, 238, 0.03);
                transform: translateX(4px);
            }

    .table-icon {
        margin-right: 0.5rem;
        font-size: 1rem;
        width: 20px;
        text-align: center;
    }

    .action-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 32px;
        height: 32px;
        border-radius: 6px;
        background-color: var(--light-bg);
        color: var(--dark-text);
        transition: all 0.2s ease;
        margin-right: 6px;
    }

        .action-btn:hover {
            background-color: var(--primary-color);
            color: white;
            transform: scale(1.1);
        }

    .btn-edit {
        background-color: rgba(67, 97, 238, 0.1);
        color: var(--primary-color);
    }

        .btn-edit:hover {
            background-color: var(--primary-color);
            color: white;
        }

    .btn-delete {
        background-color: rgba(239, 35, 60, 0.1);
        color: var(--danger-color);
    }

        .btn-delete:hover {
            background-color: var(--danger-color);
            color: white;
        }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.35rem 0.75rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    .status-available {
        background-color: rgba(76, 201, 240, 0.15);
        color: #0a6e7c;
    }

    .status-unavailable {
        background-color: rgba(239, 35, 60, 0.15);
        color: #b51a2a;
    }

    .status-pending {
        background-color: rgba(248, 150, 30, 0.15);
        color: #8a5300;
    }

    .status-approved {
        background-color: rgba(67, 97, 238, 0.15);
        color: #2a3d8f;
    }

    .status-rejected {
        background-color: rgba(239, 35, 60, 0.15);
        color: #b51a2a;
    }

    .facility-image {
        width: 80px;
        height: 60px;
        object-fit: cover;
        border-radius: 5px;
        transition: transform 0.3s ease;
        margin-right: 0.5rem;
    }

        .facility-image:hover {
            transform: scale(1.8);
            z-index: 10;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

    .image-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .empty-state {
        padding: 2rem;
        text-align: center;
        color: var(--light-text);
    }

        .empty-state i {
            font-size: 2.5rem;
            color: var(--border-color);
            margin-bottom: 1rem;
        }

    /* Modal Styling */
    .modal-content {
        border: none;
        border-radius: 10px;
    }

    .modal-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        border-bottom: none;
    }

    .modal-title {
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .btn-close {
        filter: invert(1);
    }

    /* Analytics Cards */
    .analytics-card {
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 20px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        background: white;
    }

    .analytics-title {
        font-size: 0.9rem;
        color: var(--light-text);
        margin-bottom: 10px;
    }

    .analytics-value {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--dark-text);
    }

    .analytics-change {
        font-size: 0.8rem;
        margin-top: 5px;
    }

    .positive-change {
        color: #28a745;
    }

    .negative-change {
        color: #dc3545;
    }

    /* Chart Container */
    .chart-container {
        background: white;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 20px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
    }

    .chart-title {
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 15px;
        color: var(--dark-text);
    }

    /* Responsive */
    @@media (max-width: 992px) {
        .data-table {
            display: block;
            overflow-x: auto;
        }

        .action-buttons {
            flex-direction: column;
            gap: 0.3rem;
        }

        .btn-action {
            width: 100%;
            justify-content: center;
        }
    }

    @@media (max-width: 768px) {
        .management-container {
            padding: 0 1rem;
        }

        .data-table th,
        .data-table td {
            padding: 0.8rem;
            font-size: 0.9rem;
        }

        .section-title {
            font-size: 1.5rem;
        }
    }
</style>

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="management-container">
    <!-- Analytics Summary -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="analytics-card">
                <div class="analytics-title">Total Reservations</div>
                <div class="analytics-value">@ViewBag.TotalReservations</div>
                <div class="analytics-change positive-change">
                    <i class="fas fa-arrow-up"></i> 12% from last month
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="analytics-card">
                <div class="analytics-title">Approval Rate</div>
                <div class="analytics-value">@ViewBag.ApprovalRate%</div>
                <div class="analytics-change positive-change">
                    <i class="fas fa-arrow-up"></i> 5% from last month
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="analytics-card">
                <div class="analytics-title">Most Popular Facility</div>
                <div class="analytics-value">@ViewBag.PopularFacility</div>
                <div class="analytics-change">
                    @ViewBag.PopularFacilityCount bookings
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="analytics-card">
                <div class="analytics-title">Peak Day</div>
                <div class="analytics-value">@ViewBag.PeakDay</div>
                <div class="analytics-change">
                    @ViewBag.PeakDayCount bookings
                </div>
            </div>
        </div>
    </div>

    <!-- Facilities Section -->
    <div class="table-container">
        <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
            <h2 class="section-title">
                <i class="fas fa-warehouse"></i>Facilities
            </h2>
            <button class="btn btn-primary-custom" style="padding: 20px;" data-toggle="modal" data-target="#addFacilityModal">
                <i class="fas fa-plus-circle"></i> Add New
            </button>
        </div>

        <table class="data-table">
            <thead>
                <tr>
                    <th><i class="fas fa-building table-icon"></i>Name</th>
                    <th><i class="fas fa-align-left table-icon"></i>Description</th>
                    <th><i class="fas fa-users table-icon"></i>Capacity</th>
                    <th><i class="fas fa-toggle-on table-icon"></i>Status</th>
                    <th><i class="fas fa-image table-icon"></i>Image</th>
                    <th><i class="fas fa-cogs table-icon"></i>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Item1 != null && Model.Item1.Any())
                {
                    @foreach (var facility in Model.Item1)
                    {
                        <tr>
                            <td>@facility.FacilityName</td>
                            <td>@facility.Description</td>
                            <td>@facility.Capacity</td>
                            <td>
                                <span class="status-badge @(facility.AvailabilityStatus == "Available" ? "status-available" : "status-unavailable")">
                                    <i class="fas @(facility.AvailabilityStatus == "Available" ? "fa-check-circle" : "fa-times-circle")"></i>
                                    @facility.AvailabilityStatus
                                </span>
                            </td>
                            <td>
                                <div class="image-container">
                                    @if (!string.IsNullOrEmpty(facility.ImageUrl))
                                    {
                                        var images = facility.ImageUrl.Split(",");
                                        @foreach (var image in images)
                                        {
                                            <img src="@Url.Content(image)" alt="Facility Image" class="facility-image" />
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">No Image</span>
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a asp-controller="Facility" asp-action="Edit" asp-route-id="@facility.FacilityID" class="btn-action btn-edit" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@facility.FacilityID" class="btn-action btn-delete" title="Delete">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="empty-state">
                            <i class="fas fa-inbox"></i>
                            <p>No facilities found</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Reservations Section -->
    @{
        var activeReservations = Model.Item2?.Where(r => r.Status != "Expired").ToList();
    }
    <div class="table-container">
        <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
            <h2 class="section-title">
                <i class="fas fa-calendar-check"></i>Reservations
            </h2>
            <div>
                <a href="@Url.Action("ViewExpiredHistory", "Reservation")" class="btn btn-secondary-custom">
                    <i class="fas fa-history"></i> View Expired
                </a>
                <button class="btn btn-primary-custom ms-2" id="generateReportBtn">
                    <i class="fas fa-file-pdf"></i> Generate Report
                </button>
            </div>
        </div>

        <!-- Reservation Analytics -->
        <div class="row p-3">
            <div class="col-md-6">
                <div class="chart-container">
                    <h5 class="chart-title">Reservations by Status</h5>
                    <canvas id="reservationStatusChart"></canvas>
                </div>
            </div>
            <div class="col-md-6">
                <div class="chart-container">
                    <h5 class="chart-title">Reservations by Facility</h5>
                    <canvas id="reservationFacilityChart"></canvas>
                </div>
            </div>
        </div>

        @if (activeReservations != null && activeReservations.Any())
        {
            <table class="data-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-warehouse table-icon"></i>Facility</th>
                        <th><i class="fas fa-user table-icon"></i>Homeowner</th>
                        <th><i class="fas fa-calendar-day table-icon"></i>Date</th>
                        <th><i class="fas fa-clock table-icon"></i>Start Time</th>
                        <th><i class="fas fa-clock table-icon"></i>End Time</th>
                        <th><i class="fas fa-pen table-icon"></i>Purpose</th>
                        <th><i class="fas fa-info-circle table-icon"></i>Status</th>
                        <th><i class="fas fa-cogs table-icon"></i>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var reservation in activeReservations)
                    {
                        <tr>
                            <td>@reservation.Facility?.FacilityName</td>
                            <td>@reservation.Homeowner?.FullName</td>
                            <td>@reservation.ReservationDate.ToShortDateString()</td>
                            <td>@reservation.StartTime</td>
                            <td>@reservation.EndTime</td>
                            <td>@reservation.Purpose</td>
                            <td>
                                <span class="status-badge @GetStatusClass(reservation.Status)">
                                    <i class="fas @GetStatusIcon(reservation.Status)"></i>
                                    @reservation.Status
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    @if (reservation.Status == "Pending")
                                    {
                                        <form asp-action="ApproveReservation" method="post" class="d-inline">
                                            <input type="hidden" name="reservationId" value="@reservation.ReservationID" />
                                            <button type="submit" class="btn-action btn-edit" title="Approve">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        </form>
                                        <form asp-action="RejectReservation" method="post" class="d-inline">
                                            <input type="hidden" name="reservationId" value="@reservation.ReservationID" />
                                            <button type="submit" class="btn-action btn-delete" title="Reject">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </form>
                                    }
                                    <a href="@Url.Action("ReservationDetails", new { id = reservation.ReservationID })" class="btn-action" title="View Details" style="background-color: rgba(108, 117, 125, 0.1); color: #6c757d;">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="empty-state p-4">
                <i class="fas fa-calendar-times"></i>
                <p>No pending reservations at the moment</p>
            </div>
        }
    </div>
</div>

<!-- Add Facility Modal -->
<div class="modal fade" id="addFacilityModal" tabindex="-1" role="dialog" aria-labelledby="addFacilityModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-plus-circle"></i> Add New Facility
                </h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @await Html.PartialAsync("_AddFacilityForm", new HOMEOWNER.Models.Facility())
            </div>
        </div>
    </div>
</div>

<!-- Report Generation Modal -->
<div class="modal fade" id="reportModal" tabindex="-1" role="dialog" aria-labelledby="reportModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-file-pdf"></i> Generate Report
                </h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reportForm">
                    <div class="mb-3">
                        <label class="form-label">Report Type</label>
                        <select class="form-select" name="reportType">
                            <option value="summary">Summary Report</option>
                            <option value="detailed">Detailed Report</option>
                            <option value="facility">Facility Usage Report</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date Range</label>
                        <div class="input-daterange input-group">
                            <input type="date" class="form-control" name="startDate">
                            <span class="input-group-text">to</span>
                            <input type="date" class="form-control" name="endDate">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Facility</label>
                        <select class="form-select" name="facilityId">
                            <option value="">All Facilities</option>
                            @foreach (var facility in Model.Item1)
                            {
                                <option value="@facility.FacilityID">@facility.FacilityName</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="generateReport">Generate</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize charts
            initReservationCharts();

            // Handle report generation button click
            $("#generateReportBtn").click(function() {
                $("#reportModal").modal("show");
            });

            // Handle actual report generation
            $("#generateReport").click(function() {
                const formData = $("#reportForm").serialize();

                // Show loading state
                $(this).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Generating...');

                // In a real implementation, this would make an AJAX call to generate the report
                // For now, we'll simulate a delay
                setTimeout(function() {
                    $("#reportModal").modal("hide");
                    $("#generateReport").html("Generate");

                    // Show success toast
                    showToast('Report generated successfully!', 'success');

                    // In a real app, you might open the PDF in a new tab or trigger download
                    // window.open('/Reports/Generate?' + formData, '_blank');
                }, 2000);
            });

            // Handle facility addition
            $("#addFacilityForm").submit(function (event) {
                event.preventDefault();
                let formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("Add", "Facility")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success) {
                            showToast('Facility added successfully!', 'success');
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                            $("#addFacilityModal").modal("hide");
                        } else {
                            showToast('Error: ' + response.message, 'error');
                        }
                    },
                    error: function (xhr) {
                        showToast('Error: ' + xhr.responseText, 'error');
                    }
                });
            });

            // Handle reservation approval
            $('form.approveReservationForm').submit(function (event) {
                event.preventDefault();
                var form = $(this);
                var reservationId = form.find('input[name="reservationId"]').val();

                $.ajax({
                    url: '@Url.Action("ApproveReservation", "Admin")',
                    type: 'POST',
                    data: { reservationId: reservationId },
                    success: function (response) {
                        if (response.success) {
                            showToast(response.message, 'success');
                            form.closest('tr').fadeOut(300, function() {
                                $(this).remove();
                                // Refresh charts after status change
                                initReservationCharts();
                            });
                        } else {
                            showToast(response.message, 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred: " + status + ", " + error);
                        showToast("An error occurred while approving the reservation.", 'error');
                    }
                });
            });

            // Toast notification function
            function showToast(message, type) {
                const toast = document.createElement('div');
                toast.className = `toast-notification ${type}`;
                toast.innerHTML = `
                    <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                    <span>${message}</span>
                `;
                document.body.appendChild(toast);

                setTimeout(() => {
                    toast.classList.add('show');
                    setTimeout(() => {
                        toast.classList.remove('show');
                        setTimeout(() => {
                            toast.remove();
                        }, 300);
                    }, 3000);
                }, 100);
            }
        });

        function initReservationCharts() {
            // Reservation Status Chart
            const statusCtx = document.getElementById('reservationStatusChart').getContext('2d');
            const statusChart = new Chart(statusCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Approved', 'Pending', 'Rejected', 'Cancelled'],
                    datasets: [{
                        data: [@ViewBag.ApprovedCount, @ViewBag.PendingCount, @ViewBag.RejectedCount, @ViewBag.CancelledCount],
                        backgroundColor: [
                            'rgba(67, 97, 238, 0.7)',
                            'rgba(248, 150, 30, 0.7)',
                            'rgba(239, 35, 60, 0.7)',
                            'rgba(108, 117, 125, 0.7)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right',
                        }
                    }
                }
            });

            // Reservation by Facility Chart
            const facilityCtx = document.getElementById('reservationFacilityChart').getContext('2d');
            const facilityChart = new Chart(facilityCtx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(ViewBag.FacilityNames)),
                    datasets: [{
                        label: 'Reservations',
                        data: @Html.Raw(Json.Serialize(ViewBag.FacilityCounts)),
                        backgroundColor: 'rgba(67, 97, 238, 0.7)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
}

@functions {
    public string GetStatusClass(string status)
    {
        return status switch
        {
            "Approved" => "status-approved",
            "Pending" => "status-pending",
            "Rejected" => "status-rejected",
            "Cancelled" => "status-unavailable",
            _ => "status-unavailable"
        };
    }

    public string GetStatusIcon(string status)
    {
        return status switch
        {
            "Approved" => "fa-check-circle",
            "Pending" => "fa-hourglass-half",
            "Rejected" => "fa-times-circle",
            "Cancelled" => "fa-ban",
            _ => "fa-question-circle"
        };
    }
}