@model IEnumerable<HOMEOWNER.Models.Facility>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/reservation.css" asp-append-version="true">


<div class="container">
    <!-- Action Buttons -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <a href="@Url.Action("Dashboard", "Homeowner")" class="cta-btn" style="background-color: var(--primary-color);">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>

        <a href="@Url.Action("History", "Reservation")" class="btn btn-outline-secondary">
            <i class="fas fa-history"></i> View Reservation History
        </a>
    </div>

    <!-- Page Header -->
    <div class="page-header">
        <h2>
            <i class="fas fa-building-columns"></i> Available Facilities for Reservation
        </h2>
    </div>

    <!-- Alerts -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
        </div>
    }

    <!-- Facilities Table -->
    @if (!Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-building-circle-exclamation"></i>
            <p class="h5">No facilities available for reservation at the moment.</p>
            <p class="text-muted">Please check back later or contact the administrator.</p>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th><i class="fas fa-image"></i> Image</th>
                        <th><i class="fas fa-door-open"></i> Facility Name</th>
                        <th><i class="fas fa-info-circle"></i> Description</th>
                        <th><i class="fas fa-users"></i> Capacity</th>
                        <th><i class="fas fa-toggle-on"></i> Availability</th>
                        <th><i class="fas fa-star"></i> Rating</th>
                        <th><i class="fas fa-calendar-plus"></i> Reserve</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var facility in Model)
                    {
                        <tr>
                            <td data-label="Image">
                                <img src="@facility.ImageUrl" alt="@facility.FacilityName" class="facility-img">
                            </td>
                            <td data-label="Facility Name"><strong>@facility.FacilityName</strong></td>
                            <td data-label="Description">@facility.Description</td>
                            <td data-label="Capacity">@facility.Capacity</td>
                            <td data-label="Availability">
                                <span class="badge @(facility.AvailabilityStatus == "Available" ? "bg-success" : "bg-danger")">
                                    @facility.AvailabilityStatus
                                </span>
                            </td>
                            <td data-label="Rating">
                                <span class="rating-stars">
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        if (i < (facility.Rating ?? 0))
                                        {
                                            <i class="fas fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star text-warning"></i>
                                        }
                                    }
                                </span>
                            </td>
                            <td data-label="Reserve">
                                <form method="post" asp-action="ReserveFacility" class="reservation-form">
                                    <input type="hidden" name="facilityId" value="@facility.FacilityID" />

                                    <input type="time" name="startTime" class="form-control mb-2" required placeholder="Start Time">
                                    <input type="time" name="endTime" class="form-control mb-2" required placeholder="End Time">
                                    <input type="text" name="purpose" class="form-control mb-2" placeholder="Purpose" required>

                                    <button type="submit" class="btn btn-primary btn-reserve">
                                        <i class="fas fa-calendar-check"></i> Reserve Now
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<script>
    // Add animation to buttons on hover
    document.querySelectorAll('.btn').forEach(button => {
        button.addEventListener('mouseenter', () => {
            button.style.transform = 'translateY(-2px)';
            button.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';
        });

        button.addEventListener('mouseleave', () => {
            button.style.transform = '';
            button.style.boxShadow = '';
        });
    });

    // Add ripple effect to reserve buttons
    document.querySelectorAll('.btn-reserve').forEach(button => {
        button.addEventListener('click', function(e) {
            let x = e.clientX - e.target.getBoundingClientRect().left;
            let y = e.clientY - e.target.getBoundingClientRect().top;

            let ripples = document.createElement('span');
            ripples.style.left = x + 'px';
            ripples.style.top = y + 'px';
            this.appendChild(ripples);

            setTimeout(() => {
                ripples.remove();
            }, 1000);
        });
    });
</script>